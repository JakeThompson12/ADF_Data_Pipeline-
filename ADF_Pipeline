import csv
import os

Input_Name = input("Name of Molecule: ")
directory_path = r'C:\Users\2586376t\Documents-PGR\Research\Properties-of-MPOMs\conda'
new_folder_name = Input_Name
new_folder_path = os.path.join(directory_path, new_folder_name)
os.makedirs(new_folder_path)

input_filename = r'C:\Users\2586376t\Documents-PGR\Research\Properties-of-MPOMs\conda\Test.out'
output_filename = os.path.join(new_folder_path, f'{new_folder_name}_Orbital_Energies_Output.csv')

Basic_Info_Output_filename = os.path.join(new_folder_path, f'{new_folder_name}_Basic_Information_Output.csv')

Convergence_filename = os.path.join(new_folder_path, f'{new_folder_name}_Convergance.csv')

def Orbital_Eneries_Exporter(input_filename, output_filename):
    Orbital_energies_Data = []  # Create a list to store the energy values

    with open(input_filename, 'r') as file_object:
        lines = file_object.readlines()
        for i, line in enumerate(lines):
            if ' Scaled ZORA Orbital Energies, per Irrep and Spin:' in line:
                for next_line in lines[i+5:i+17]:
                    Energies_Data_New = next_line.split()[:3]
                    Orbital_energies_Data.append(Energies_Data_New)

    # Write the combined data to a CSV file with headers
    with open(output_filename, 'w', newline='') as csv_file:
        csv_writer = csv.writer(csv_file)

        csv_writer.writerow(['Orbital No', 'Occupation', 'Orbital Energies / H', 'Orbital Energies / eV'])
        csv_writer.writerows(Orbital_energies_Data)

Orbital_Eneries_Exporter(input_filename, output_filename)

def Basic_Information_Exporter(input_filename, Basic_Info_Output_filename):
    Output_Energy = []
    HOMO = []
    LUMO = []
    Gap = []

    with open(input_filename, 'r') as file_object:
        lines = file_object.readlines()
        for line in lines:
            if 'Energy (hartree)' in line:
                energy = float(line[29:39])  # Extract and convert the energy value to float
                Output_Energy.append(energy)

            elif ' HOMO :' in line:
                HOMO_Energy = float(line[35:56])   # Extract and convert the energy value to float
                HOMO.append(HOMO_Energy)

            elif ' LUMO :' in line:
                LUMO_Energy = float(line[35:56])   # Extract and convert the energy value to float
                LUMO.append(LUMO_Energy)
        
        for i in range(len(HOMO)):
            Gap.append(HOMO[i] - LUMO[i])

        combined_data = list(zip(Output_Energy, HOMO, LUMO, Gap))

    with open(Basic_Info_Output_filename, 'w', newline='') as csv_file:
        csv_writer = csv.writer(csv_file)

        csv_writer.writerow(['Electronic Energy / eV', 'HOMO /eV', 'LUMO / eV', 'Gap Energy / eV'])
        csv_writer.writerow(combined_data[0])  # Assuming you want the first values

Basic_Information_Exporter(input_filename, Basic_Info_Output_filename)

def Convergence(input_filename, Convergence_filename):
    Energy_Convergence = []

    with open(input_filename, 'r') as file_object:
        lines = file_object.readlines()
        for i, line in enumerate(lines):
            if 'current energy' in line:
                Energy_Convergence.append(float(line[45:57]))

    with open(Convergence_filename, 'w', newline='') as csv_file:
        csv_writer = csv.writer(csv_file)

        csv_writer.writerow(['Electronic Energy / eV'])
        csv_writer.writerows([[x] for x in Energy_Convergence])

Convergence(input_filename, Convergence_filename)
